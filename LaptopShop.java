//üìå –ü–æ–¥—É–º–∞—Ç—å –Ω–∞–¥ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –∫–ª–∞—Å—Å–∞ –ù–æ—É—Ç–±—É–∫ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ —Ç–µ—Ö–Ω–∏–∫–∏ - –≤—ã–¥–µ–ª–∏—Ç—å –ø–æ–ª—è –∏ –º–µ—Ç–æ–¥—ã. –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤ java.
//üìå –°–æ–∑–¥–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ –Ω–æ—É—Ç–±—É–∫–æ–≤.
//üìå –ù–∞–ø–∏—Å–∞—Ç—å –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫—Ä–∏—Ç–µ—Ä–∏–π (–∏–ª–∏ –∫—Ä–∏—Ç–µ—Ä–∏–∏)
//—Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ –≤—ã–≤–µ–¥–µ—Ç –Ω–æ—É—Ç–±—É–∫–∏, –æ—Ç–≤–µ—á–∞—é—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—É. –ö—Ä–∏—Ç–µ—Ä–∏–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –º–æ–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å –≤ Map. –ù–∞–ø—Ä–∏–º–µ—Ä:
//        ‚Äú–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–º—É –∫—Ä–∏—Ç–µ—Ä–∏—é:
//        1 - –û–ó–£
//        2 - –û–±—ä–µ–º –ñ–î
//        3 - –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞
//        4 - –¶–≤–µ—Ç ‚Ä¶
//üìå –î–∞–ª–µ–µ –Ω—É–∂–Ω–æ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ - —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
// —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –º–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –≤ Map.
//üìå –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –Ω–æ—É—Ç–±—É–∫–∏ –∏—Ö –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –∏ –≤—ã–≤–µ—Å—Ç–∏ –ø—Ä–æ—Ö–æ–¥—è—â–∏–µ –ø–æ —É—Å–ª–æ–≤–∏—è–º.

import java.util.*;

public class LaptopShop {
    public static void main(String[] args) {

        Set<Laptop> laptopSet = getLaptops();

        System.out.println("–í–µ—Å—å —Å–ø–∏—Å–æ–∫ –Ω–æ—É—Ç–±—É–∫–æ–≤ (–¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏):");
        for (Laptop laptop : laptopSet) {
            System.out.println(laptop);
        }
        System.out.println("--------------------------------------------------");
        System.out.println();

        // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –≤–≤–æ–¥–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ñ–∏–ª—å—Ç—Ä–∞ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        Scanner scanner = new Scanner(System.in);

        while (true) {
            Map<String, Object> filters = new HashMap<>();
            System.out.println("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞ (–ø—É—Å—Ç–æ–µ –ø–æ–ª–µ –ø—Ä–æ–ø—É—Å–∫)!! –ó–Ω–∞—á–µ–Ω–∏—è —É–∫–∞–∑–∞–Ω—ã –≤ –∫—Ä—É–≥–ª—ã—Ö —Å–∫–æ–±–∫–∞—Ö!");
            System.out.println("–ë—Ä–µ–Ω–¥, OS, –∏ —Ü–≤–µ—Ç –∫–æ—Ä–ø—É—Å–∞ –¥–æ–ª–∂–Ω—ã —Ç–æ—á–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –∏–Ω–∞—á–µ –±—É–¥–µ—Ç –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫!!):");

            System.out.print("–ë—Ä–µ–Ω–¥ (ASUS, Acer, GIGABYTE, Dell, HP, Huawei, Samsung) : ");
            String brandInput = scanner.nextLine();
            if (!brandInput.isEmpty()) {
                filters.put("brand", brandInput);
            }

            System.out.print("–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –æ–±—ä–µ–º –û–ó–£ (4, 8, 16, 32): ");
            String ramInput = scanner.nextLine();
            if (!ramInput.isEmpty()) {
                filters.put("ram", Integer.parseInt(ramInput));
            }

            System.out.print("–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –æ–±—ä–µ–º –∂–µ—Å—Ç–∫–æ–≥–æ –¥–∏—Å–∫–∞ (120, 240, 500, 1000, 2000): ");
            String hdSizeInput = scanner.nextLine();
            if (!hdSizeInput.isEmpty()) {
                filters.put("hdSize", Integer.parseInt(hdSizeInput));
            }

            System.out.print("–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ (Linux, Windows): ");
            String computerOsInput = scanner.nextLine();
            if (!computerOsInput.isEmpty()) {
                filters.put("computerOs", computerOsInput);
            }

            System.out.print("–¶–≤–µ—Ç (–±–µ–ª—ã–π, —Å–µ—Ä—ã–π, —á–µ—Ä–Ω—ã–π): ");
            String colorInput = scanner.nextLine();
            if (!colorInput.isEmpty()) {
                filters.put("color", colorInput);
            }

            System.out.print("–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–∏—Å–ø–ª–µ–π –≤ –¥—é–π–º–∞—Ö (13, 14, 15, 16, 17, 18): ");
            String displayInput = scanner.nextLine();
            if (!displayInput.isEmpty()) {
                filters.put("display", Integer.parseInt(displayInput));
            }
            System.out.println("--------------------------------------------------");
            System.out.println("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤—ã–±–æ—Ä–∫–∏ (–≤–µ—Å—å —Å–ø–∏—Å–æ–∫ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç!)>> " + filters);
            System.out.println("--------------------------------------------------");
            // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ –≤—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            filterLaptops(filters, laptopSet);

            System.out.print("–ñ–µ–ª–∞–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—ã–±–æ—Ä–∫—É (n - –Ω–µ—Ç, y - –¥–∞)?: ");
            String yesNo = scanner.nextLine();
            if (yesNo.equals("n")) {
                System.out.println("GoodBy!");
                break;
            }
            System.out.println();
        }

    }

    private static Set<Laptop> getLaptops() {
        Laptop laptop1 = new Laptop("ASUS", 4, 120, "Linux", "—á–µ—Ä–Ω—ã–π", 13);
        Laptop laptop2 = new Laptop("Acer", 32, 2000, "Windows", "–±–µ–ª—ã–π", 18);
        Laptop laptop3 = new Laptop("GIGABYTE", 4, 240, "Linux", "—á–µ—Ä–Ω—ã–π", 14);
        Laptop laptop4 = new Laptop("HP", 32, 1000, "Windows", "—Å–µ—Ä—ã–π", 17);
        Laptop laptop5 = new Laptop("Samsung", 16, 500, "Windows", "—Å–µ—Ä—ã–π", 16);
        Laptop laptop6 = new Laptop("Huawei", 8, 240, "Windows", "—á–µ—Ä–Ω—ã–π", 15);
        Laptop laptop7 = new Laptop("Dell", 16, 1000, "Windows", "—á–µ—Ä–Ω—ã–π", 17);
        Laptop laptop8 = new Laptop("Acer", 8, 500, "Windows", "—Å–µ—Ä—ã–π", 15);
        Laptop laptop9 = new Laptop("HP", 4, 120, "Linux", "–±–µ–ª—ã–π", 13);
        Laptop laptop10 = new Laptop("Acer", 8, 500, "Windows", "—á–µ—Ä–Ω—ã–π", 15);
        Laptop laptop11 = new Laptop("HP", 16, 2000, "Linux", "–±–µ–ª—ã–π", 18);
        Laptop laptop12 = new Laptop("HP", 8, 240, "Linux", "—á–µ—Ä–Ω—ã–π", 14);


        // –ú–Ω–æ–∂–µ—Å—Ç–≤–æ –Ω–æ—É—Ç–±—É–∫–æ–≤
        Set<Laptop> laptopSet = Set.of(laptop1, laptop2, laptop3, laptop4, laptop5, laptop6,
                laptop7, laptop8, laptop9, laptop10, laptop11, laptop12);
        return laptopSet;
    }

    private static void filterLaptops(Map<String, Object> filters, Set<Laptop> laptopSet) {
        for (Laptop laptop : laptopSet) {
            boolean passFilter = true;

            for (Map.Entry<String, Object> entry : filters.entrySet()) {
                switch (entry.getKey()) {
                    case "brand":
                        if (!laptop.getBrand().equals(entry.getValue())) {
                            passFilter = false;
                        }
                        break;
                    case "ram":
                        if (laptop.getRam() < (int) entry.getValue()) {
                            passFilter = false;
                        }
                        break;
                    case "hdSize":
                        if (laptop.getHdSize() < (int) entry.getValue()) {
                            passFilter = false;
                        }
                        break;
                    case "computerOs":
                        if (!laptop.getOs().equalsIgnoreCase((String) entry.getValue())) {
                            passFilter = false;
                        }
                        break;
                    case "color":
                        if (!laptop.getColor().equalsIgnoreCase((String) entry.getValue())) {
                            passFilter = false;
                        }
                        break;
                    case "display":
                        if (laptop.getDisplay() < (int) entry.getValue()) {
                            passFilter = false;
                        }
                        break;
                }
            }

            if (passFilter) {
                System.out.println(laptop);
            }
        }
        System.out.println("--------------------------------------------------");
        System.out.println();
    }



}
